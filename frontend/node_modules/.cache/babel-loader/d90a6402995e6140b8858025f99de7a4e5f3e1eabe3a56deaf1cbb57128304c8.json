{"ast":null,"code":"import _regeneratorRuntime from \"F:/python/course/crowdsensing/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"F:/python/course/crowdsensing/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nexport default {\n  name: 'SimulationList',\n  data: function data() {\n    return {\n      loading: false,\n      search: '',\n      simulations: [],\n      headers: [{\n        text: '名称',\n        value: 'name',\n        sortable: true\n      }, {\n        text: '算法',\n        value: 'algorithm_type',\n        sortable: true\n      }, {\n        text: '猎手数量',\n        value: 'num_hunters',\n        sortable: true,\n        align: 'center'\n      }, {\n        text: '目标数量',\n        value: 'num_targets',\n        sortable: true,\n        align: 'center'\n      }, {\n        text: '步数',\n        value: 'step_count',\n        sortable: true,\n        align: 'center'\n      }, {\n        text: '状态',\n        value: 'is_captured',\n        sortable: true,\n        align: 'center'\n      }, {\n        text: '创建时间',\n        value: 'created_at',\n        sortable: true\n      }, {\n        text: '操作',\n        value: 'actions',\n        sortable: false,\n        align: 'center'\n      }]\n    };\n  },\n  created: function created() {\n    var _this = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _this.fetchSimulations();\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  methods: {\n    fetchSimulations: function fetchSimulations() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _this2.loading = true;\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _this2.axios.get('/simulations/');\n            case 4:\n              response = _context2.sent;\n              _this2.simulations = response.data;\n              _context2.next = 12;\n              break;\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error('Failed to fetch simulations:', _context2.t0);\n              _this2.$toast.error('获取模拟列表失败');\n            case 12:\n              _context2.prev = 12;\n              _this2.loading = false;\n              return _context2.finish(12);\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[1, 8, 12, 15]]);\n      }))();\n    },\n    formatDate: function formatDate(dateString) {\n      if (!dateString) return '未知';\n      var date = new Date(dateString);\n      return date.toLocaleString();\n    },\n    formatAlgorithm: function formatAlgorithm(algorithm) {\n      var map = {\n        'APF': '人工势场法',\n        'CONSENSUS': '共识算法'\n      };\n      return map[algorithm] || algorithm;\n    }\n  }\n};","map":{"version":3,"names":["name","data","loading","search","simulations","headers","text","value","sortable","align","created","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","fetchSimulations","stop","methods","_this2","_callee2","response","_callee2$","_context2","axios","get","sent","t0","console","error","$toast","finish","formatDate","dateString","date","Date","toLocaleString","formatAlgorithm","algorithm","map"],"sources":["src/views/SimulationList.vue"],"sourcesContent":["<template>\r\n    <div class=\"simulation-list\">\r\n      <v-container>\r\n        <v-row>\r\n          <v-col cols=\"12\">\r\n            <v-card>\r\n              <v-card-title>\r\n                模拟列表\r\n                <v-spacer></v-spacer>\r\n                <v-text-field\r\n                  v-model=\"search\"\r\n                  append-icon=\"mdi-magnify\"\r\n                  label=\"搜索\"\r\n                  single-line\r\n                  hide-details\r\n                  class=\"ml-4\"\r\n                ></v-text-field>\r\n              </v-card-title>\r\n              \r\n              <v-card-text class=\"pa-0\">\r\n                <v-data-table\r\n                  :headers=\"headers\"\r\n                  :items=\"simulations\"\r\n                  :search=\"search\"\r\n                  :loading=\"loading\"\r\n                  :items-per-page=\"10\"\r\n                  :footer-props=\"{\r\n                    'items-per-page-options': [5, 10, 20, -1],\r\n                    'items-per-page-text': '每页显示'\r\n                  }\"\r\n                  class=\"elevation-0\"\r\n                >\r\n                <template v-slot:[`item.name`]=\"{ item }\">\r\n                    <router-link \r\n                      :to=\"{ name: 'SimulationDetail', params: { id: item.id }}\"\r\n                      class=\"text-decoration-none\"\r\n                    >\r\n                      {{ item.name }}\r\n                    </router-link>\r\n                  </template>\r\n                  \r\n                  <template v-slot:[`item.algorithm_type`]=\"{ item }\">\r\n                    <v-chip small>{{ formatAlgorithm(item.algorithm_type) }}</v-chip>\r\n                  </template>\r\n                  \r\n                  <template v-slot:item.is_captured=\"{ item }\">\r\n                    <v-chip\r\n                      small\r\n                      :color=\"item.is_captured ? 'success' : 'grey'\"\r\n                      text-color=\"white\"\r\n                    >\r\n                      {{ item.is_captured ? '已捕获' : '未捕获' }}\r\n                    </v-chip>\r\n                  </template>\r\n                  \r\n                  <template v-slot:item.created_at=\"{ item }\">\r\n                    {{ formatDate(item.created_at) }}\r\n                  </template>\r\n                  \r\n                  <template v-slot:item.actions=\"{ item }\">\r\n                    <v-btn \r\n                      icon\r\n                      small\r\n                      :to=\"{ name: 'SimulationDetail', params: { id: item.id }}\"\r\n                    >\r\n                      <v-icon small>mdi-eye</v-icon>\r\n                    </v-btn>\r\n                  </template>\r\n                  \r\n                  <template v-slot:no-data>\r\n                    <div class=\"pa-4 text-center\">\r\n                      <p>暂无模拟数据</p>\r\n                      <v-btn color=\"primary\" @click=\"$router.push('/simulations/create')\">\r\n                        <v-icon left>mdi-plus</v-icon> 创建模拟\r\n                      </v-btn>\r\n                    </div>\r\n                  </template>\r\n                </v-data-table>\r\n              </v-card-text>\r\n            </v-card>\r\n            \r\n            <v-btn\r\n              color=\"primary\"\r\n              fab\r\n              large\r\n              dark\r\n              fixed\r\n              bottom\r\n              right\r\n              class=\"mb-4 mr-4\"\r\n              @click=\"$router.push('/simulations/create')\"\r\n            >\r\n              <v-icon>mdi-plus</v-icon>\r\n            </v-btn>\r\n          </v-col>\r\n        </v-row>\r\n      </v-container>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'SimulationList',\r\n    data() {\r\n      return {\r\n        loading: false,\r\n        search: '',\r\n        simulations: [],\r\n        headers: [\r\n          { text: '名称', value: 'name', sortable: true },\r\n          { text: '算法', value: 'algorithm_type', sortable: true },\r\n          { text: '猎手数量', value: 'num_hunters', sortable: true, align: 'center' },\r\n          { text: '目标数量', value: 'num_targets', sortable: true, align: 'center' },\r\n          { text: '步数', value: 'step_count', sortable: true, align: 'center' },\r\n          { text: '状态', value: 'is_captured', sortable: true, align: 'center' },\r\n          { text: '创建时间', value: 'created_at', sortable: true },\r\n          { text: '操作', value: 'actions', sortable: false, align: 'center' }\r\n        ]\r\n      }\r\n    },\r\n    async created() {\r\n      await this.fetchSimulations()\r\n    },\r\n    methods: {\r\n      async fetchSimulations() {\r\n        this.loading = true\r\n        \r\n        try {\r\n          const response = await this.axios.get('/simulations/')\r\n          this.simulations = response.data\r\n        } catch (error) {\r\n          console.error('Failed to fetch simulations:', error)\r\n          this.$toast.error('获取模拟列表失败')\r\n        } finally {\r\n          this.loading = false\r\n        }\r\n      },\r\n      formatDate(dateString) {\r\n        if (!dateString) return '未知'\r\n        const date = new Date(dateString)\r\n        return date.toLocaleString()\r\n      },\r\n      formatAlgorithm(algorithm) {\r\n        const map = {\r\n          'APF': '人工势场法',\r\n          'CONSENSUS': '共识算法'\r\n        }\r\n        return map[algorithm] || algorithm\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .simulation-list {\r\n    padding-top: 16px;\r\n  }\r\n  </style>"],"mappings":";;;AAqGA;EACAA,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,OAAA;MACAC,MAAA;MACAC,WAAA;MACAC,OAAA,GACA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,QAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,KAAA;QAAAC,QAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,KAAA;QAAAC,QAAA;QAAAC,KAAA;MAAA,GACA;QAAAH,IAAA;QAAAC,KAAA;QAAAC,QAAA;QAAAC,KAAA;MAAA,GACA;QAAAH,IAAA;QAAAC,KAAA;QAAAC,QAAA;QAAAC,KAAA;MAAA,GACA;QAAAH,IAAA;QAAAC,KAAA;QAAAC,QAAA;QAAAC,KAAA;MAAA,GACA;QAAAH,IAAA;QAAAC,KAAA;QAAAC,QAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,KAAA;QAAAC,QAAA;QAAAC,KAAA;MAAA;IAEA;EACA;EACAC,OAAA,WAAAA,QAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;MAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OACAT,KAAA,CAAAU,gBAAA;UAAA;UAAA;YAAA,OAAAH,QAAA,CAAAI,IAAA;QAAA;MAAA,GAAAP,OAAA;IAAA;EACA;EACAQ,OAAA;IACAF,gBAAA,WAAAA,iBAAA;MAAA,IAAAG,MAAA;MAAA,OAAAZ,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAW,SAAA;QAAA,IAAAC,QAAA;QAAA,OAAAb,mBAAA,GAAAG,IAAA,UAAAW,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAT,IAAA,GAAAS,SAAA,CAAAR,IAAA;YAAA;cACAI,MAAA,CAAAtB,OAAA;cAAA0B,SAAA,CAAAT,IAAA;cAAAS,SAAA,CAAAR,IAAA;cAAA,OAGAI,MAAA,CAAAK,KAAA,CAAAC,GAAA;YAAA;cAAAJ,QAAA,GAAAE,SAAA,CAAAG,IAAA;cACAP,MAAA,CAAApB,WAAA,GAAAsB,QAAA,CAAAzB,IAAA;cAAA2B,SAAA,CAAAR,IAAA;cAAA;YAAA;cAAAQ,SAAA,CAAAT,IAAA;cAAAS,SAAA,CAAAI,EAAA,GAAAJ,SAAA;cAEAK,OAAA,CAAAC,KAAA,iCAAAN,SAAA,CAAAI,EAAA;cACAR,MAAA,CAAAW,MAAA,CAAAD,KAAA;YAAA;cAAAN,SAAA,CAAAT,IAAA;cAEAK,MAAA,CAAAtB,OAAA;cAAA,OAAA0B,SAAA,CAAAQ,MAAA;YAAA;YAAA;cAAA,OAAAR,SAAA,CAAAN,IAAA;UAAA;QAAA,GAAAG,QAAA;MAAA;IAEA;IACAY,UAAA,WAAAA,WAAAC,UAAA;MACA,KAAAA,UAAA;MACA,IAAAC,IAAA,OAAAC,IAAA,CAAAF,UAAA;MACA,OAAAC,IAAA,CAAAE,cAAA;IACA;IACAC,eAAA,WAAAA,gBAAAC,SAAA;MACA,IAAAC,GAAA;QACA;QACA;MACA;MACA,OAAAA,GAAA,CAAAD,SAAA,KAAAA,SAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}