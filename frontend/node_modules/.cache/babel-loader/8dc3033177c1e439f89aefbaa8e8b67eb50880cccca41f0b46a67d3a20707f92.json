{"ast":null,"code":"export default {\n  name: 'SimulationCreate',\n  data() {\n    return {\n      valid: true,\n      loading: false,\n      simulation: {\n        name: '',\n        description: '',\n        environment_size: 500,\n        num_hunters: 5,\n        num_targets: 1,\n        algorithm_type: 'APF',\n        max_steps: 1000\n      },\n      algorithmOptions: [{\n        text: '人工势场法 (APF)',\n        value: 'APF'\n      }, {\n        text: '共识算法 (CONSENSUS)',\n        value: 'CONSENSUS'\n      }]\n    };\n  },\n  methods: {\n    resetForm() {\n      this.$refs.form.reset();\n      this.simulation = {\n        name: '',\n        description: '',\n        environment_size: 500,\n        num_hunters: 5,\n        num_targets: 1,\n        algorithm_type: 'APF',\n        max_steps: 1000\n      };\n    },\n    async createSimulation() {\n      if (!this.$refs.form.validate()) return;\n      this.loading = true;\n      try {\n        const response = await this.axios.post('/simulations/', this.simulation);\n        this.$toast.success('模拟创建成功');\n        this.$router.push(`/simulations/${response.data.id}`);\n      } catch (error) {\n        console.error('Failed to create simulation:', error);\n        this.$toast.error('创建模拟失败');\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","valid","loading","simulation","description","environment_size","num_hunters","num_targets","algorithm_type","max_steps","algorithmOptions","text","value","methods","resetForm","$refs","form","reset","createSimulation","validate","response","axios","post","$toast","success","$router","push","id","error","console"],"sources":["src/views/SimulationCreate.vue"],"sourcesContent":["<template>\r\n    <div class=\"simulation-create\">\r\n      <v-container>\r\n        <v-row>\r\n          <v-col cols=\"12\" md=\"8\" offset-md=\"2\">\r\n            <v-card>\r\n              <v-card-title class=\"headline\">创建新模拟</v-card-title>\r\n              \r\n              <v-card-text>\r\n                <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\r\n                  <v-text-field\r\n                    v-model=\"simulation.name\"\r\n                    label=\"模拟名称\"\r\n                    required\r\n                    :rules=\"[v => !!v || '名称不能为空']\"\r\n                  ></v-text-field>\r\n                  \r\n                  <v-textarea\r\n                    v-model=\"simulation.description\"\r\n                    label=\"模拟描述\"\r\n                    rows=\"3\"\r\n                  ></v-textarea>\r\n                  \r\n                  <v-select\r\n                    v-model=\"simulation.algorithm_type\"\r\n                    :items=\"algorithmOptions\"\r\n                    label=\"算法类型\"\r\n                    required\r\n                    :rules=\"[v => !!v || '请选择算法类型']\"\r\n                  ></v-select>\r\n                  \r\n                  <v-slider\r\n                    v-model=\"simulation.environment_size\"\r\n                    label=\"环境大小\"\r\n                    min=\"200\"\r\n                    max=\"1000\"\r\n                    step=\"50\"\r\n                    thumb-label=\"always\"\r\n                    class=\"mt-4\"\r\n                  ></v-slider>\r\n                  \r\n                  <v-slider\r\n                    v-model=\"simulation.num_hunters\"\r\n                    label=\"猎手数量\"\r\n                    min=\"1\"\r\n                    max=\"10\"\r\n                    step=\"1\"\r\n                    thumb-label=\"always\"\r\n                    class=\"mt-4\"\r\n                  ></v-slider>\r\n                  \r\n                  <v-slider\r\n                    v-model=\"simulation.num_targets\"\r\n                    label=\"目标数量\"\r\n                    min=\"1\"\r\n                    max=\"3\"\r\n                    step=\"1\"\r\n                    thumb-label=\"always\"\r\n                    class=\"mt-4\"\r\n                  ></v-slider>\r\n                  \r\n                  <v-slider\r\n                    v-model=\"simulation.max_steps\"\r\n                    label=\"最大步数\"\r\n                    min=\"500\"\r\n                    max=\"5000\"\r\n                    step=\"500\"\r\n                    thumb-label=\"always\"\r\n                    class=\"mt-4\"\r\n                  ></v-slider>\r\n                </v-form>\r\n              </v-card-text>\r\n              \r\n              <v-card-actions>\r\n                <v-btn text color=\"primary\" @click=\"$router.push('/simulations')\">\r\n                  <v-icon left>mdi-arrow-left</v-icon> 返回列表\r\n                </v-btn>\r\n                <v-spacer></v-spacer>\r\n                <v-btn text @click=\"resetForm\">\r\n                  <v-icon left>mdi-refresh</v-icon> 重置\r\n                </v-btn>\r\n                <v-btn color=\"primary\" :disabled=\"!valid\" :loading=\"loading\" @click=\"createSimulation\">\r\n                  <v-icon left>mdi-plus</v-icon> 创建\r\n                </v-btn>\r\n              </v-card-actions>\r\n            </v-card>\r\n          </v-col>\r\n        </v-row>\r\n      </v-container>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'SimulationCreate',\r\n    data() {\r\n      return {\r\n        valid: true,\r\n        loading: false,\r\n        simulation: {\r\n          name: '',\r\n          description: '',\r\n          environment_size: 500,\r\n          num_hunters: 5,\r\n          num_targets: 1,\r\n          algorithm_type: 'APF',\r\n          max_steps: 1000\r\n        },\r\n        algorithmOptions: [\r\n          { text: '人工势场法 (APF)', value: 'APF' },\r\n          { text: '共识算法 (CONSENSUS)', value: 'CONSENSUS' }\r\n        ]\r\n      }\r\n    },\r\n    methods: {\r\n      resetForm() {\r\n        this.$refs.form.reset()\r\n        this.simulation = {\r\n          name: '',\r\n          description: '',\r\n          environment_size: 500,\r\n          num_hunters: 5,\r\n          num_targets: 1,\r\n          algorithm_type: 'APF',\r\n          max_steps: 1000\r\n        }\r\n      },\r\n      async createSimulation() {\r\n        if (!this.$refs.form.validate()) return\r\n        \r\n        this.loading = true\r\n        \r\n        try {\r\n          const response = await this.axios.post('/simulations/', this.simulation)\r\n          this.$toast.success('模拟创建成功')\r\n          this.$router.push(`/simulations/${response.data.id}`)\r\n        } catch (error) {\r\n          console.error('Failed to create simulation:', error)\r\n          this.$toast.error('创建模拟失败')\r\n        } finally {\r\n          this.loading = false\r\n        }\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .simulation-create {\r\n    padding-top: 16px;\r\n  }\r\n  </style>"],"mappings":"AA6FA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,OAAA;MACAC,UAAA;QACAJ,IAAA;QACAK,WAAA;QACAC,gBAAA;QACAC,WAAA;QACAC,WAAA;QACAC,cAAA;QACAC,SAAA;MACA;MACAC,gBAAA,GACA;QAAAC,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA;IAEA;EACA;EACAC,OAAA;IACAC,UAAA;MACA,KAAAC,KAAA,CAAAC,IAAA,CAAAC,KAAA;MACA,KAAAd,UAAA;QACAJ,IAAA;QACAK,WAAA;QACAC,gBAAA;QACAC,WAAA;QACAC,WAAA;QACAC,cAAA;QACAC,SAAA;MACA;IACA;IACA,MAAAS,iBAAA;MACA,UAAAH,KAAA,CAAAC,IAAA,CAAAG,QAAA;MAEA,KAAAjB,OAAA;MAEA;QACA,MAAAkB,QAAA,cAAAC,KAAA,CAAAC,IAAA,uBAAAnB,UAAA;QACA,KAAAoB,MAAA,CAAAC,OAAA;QACA,KAAAC,OAAA,CAAAC,IAAA,iBAAAN,QAAA,CAAApB,IAAA,CAAA2B,EAAA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,iCAAAA,KAAA;QACA,KAAAL,MAAA,CAAAK,KAAA;MACA;QACA,KAAA1B,OAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}