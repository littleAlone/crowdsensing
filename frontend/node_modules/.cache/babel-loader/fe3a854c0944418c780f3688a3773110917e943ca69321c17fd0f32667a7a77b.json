{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    simulations: [],\n    currentSimulation: null,\n    loading: false,\n    error: null\n  },\n  mutations: {\n    SET_SIMULATIONS(state, simulations) {\n      state.simulations = simulations;\n    },\n    SET_CURRENT_SIMULATION(state, simulation) {\n      state.currentSimulation = simulation;\n    },\n    UPDATE_SIMULATION(state, simulation) {\n      // 更新列表中的模拟\n      const index = state.simulations.findIndex(s => s.id === simulation.id);\n      if (index !== -1) {\n        state.simulations.splice(index, 1, simulation);\n      }\n      // 更新当前模拟\n      if (state.currentSimulation && state.currentSimulation.id === simulation.id) {\n        state.currentSimulation = simulation;\n      }\n    },\n    ADD_SIMULATION(state, simulation) {\n      state.simulations.push(simulation);\n    },\n    REMOVE_SIMULATION(state, id) {\n      state.simulations = state.simulations.filter(s => s.id !== id);\n      if (state.currentSimulation && state.currentSimulation.id === id) {\n        state.currentSimulation = null;\n      }\n    },\n    SET_LOADING(state, loading) {\n      state.loading = loading;\n    },\n    SET_ERROR(state, error) {\n      state.error = error;\n    }\n  },\n  actions: {\n    async fetchSimulations({\n      commit\n    }) {\n      commit('SET_LOADING', true);\n      try {\n        const response = await Vue.axios.get('/simulations/');\n        commit('SET_SIMULATIONS', response.data);\n        commit('SET_ERROR', null);\n      } catch (error) {\n        console.error('Error fetching simulations:', error);\n        commit('SET_ERROR', 'Failed to fetch simulations');\n      } finally {\n        commit('SET_LOADING', false);\n      }\n    },\n    async fetchSimulation({\n      commit\n    }, id) {\n      commit('SET_LOADING', true);\n      try {\n        const response = await Vue.axios.get(`/simulations/${id}`);\n        commit('SET_CURRENT_SIMULATION', response.data);\n        commit('SET_ERROR', null);\n      } catch (error) {\n        console.error(`Error fetching simulation ${id}:`, error);\n        commit('SET_ERROR', `Failed to fetch simulation ${id}`);\n      } finally {\n        commit('SET_LOADING', false);\n      }\n    },\n    async createSimulation({\n      commit\n    }, simulation) {\n      commit('SET_LOADING', true);\n      try {\n        const response = await Vue.axios.post('/simulations/', simulation);\n        commit('ADD_SIMULATION', response.data);\n        commit('SET_ERROR', null);\n        return response.data;\n      } catch (error) {\n        console.error('Error creating simulation:', error);\n        commit('SET_ERROR', 'Failed to create simulation');\n        throw error;\n      } finally {\n        commit('SET_LOADING', false);\n      }\n    },\n    async startSimulation({\n      commit\n    }, id) {\n      commit('SET_LOADING', true);\n      try {\n        await Vue.axios.post(`/simulations/${id}/start`);\n        commit('SET_ERROR', null);\n      } catch (error) {\n        console.error(`Error starting simulation ${id}:`, error);\n        commit('SET_ERROR', `Failed to start simulation ${id}`);\n        throw error;\n      } finally {\n        commit('SET_LOADING', false);\n      }\n    },\n    async stopSimulation({\n      commit\n    }, id) {\n      commit('SET_LOADING', true);\n      try {\n        await Vue.axios.post(`/simulations/${id}/stop`);\n        commit('SET_ERROR', null);\n      } catch (error) {\n        console.error(`Error stopping simulation ${id}:`, error);\n        commit('SET_ERROR', `Failed to stop simulation ${id}`);\n        throw error;\n      } finally {\n        commit('SET_LOADING', false);\n      }\n    },\n    async resetSimulation({\n      commit\n    }, id) {\n      commit('SET_LOADING', true);\n      try {\n        await Vue.axios.post(`/simulations/${id}/reset`);\n        const response = await Vue.axios.get(`/simulations/${id}`);\n        commit('UPDATE_SIMULATION', response.data);\n        commit('SET_ERROR', null);\n      } catch (error) {\n        console.error(`Error resetting simulation ${id}:`, error);\n        commit('SET_ERROR', `Failed to reset simulation ${id}`);\n        throw error;\n      } finally {\n        commit('SET_LOADING', false);\n      }\n    },\n    async deleteSimulation({\n      commit\n    }, id) {\n      commit('SET_LOADING', true);\n      try {\n        await Vue.axios.delete(`/simulations/${id}`);\n        commit('REMOVE_SIMULATION', id);\n        commit('SET_ERROR', null);\n      } catch (error) {\n        console.error(`Error deleting simulation ${id}:`, error);\n        commit('SET_ERROR', `Failed to delete simulation ${id}`);\n        throw error;\n      } finally {\n        commit('SET_LOADING', false);\n      }\n    },\n    updateCurrentSimulation({\n      commit\n    }, simulation) {\n      commit('SET_CURRENT_SIMULATION', simulation);\n    }\n  },\n  getters: {\n    getSimulationById: state => id => {\n      return state.simulations.find(s => s.id === id);\n    },\n    getCapturingTime: state => {\n      if (state.currentSimulation && state.currentSimulation.capture_time) {\n        return state.currentSimulation.capture_time;\n      }\n      return null;\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","use","Store","state","simulations","currentSimulation","loading","error","mutations","SET_SIMULATIONS","SET_CURRENT_SIMULATION","simulation","UPDATE_SIMULATION","index","findIndex","s","id","splice","ADD_SIMULATION","push","REMOVE_SIMULATION","filter","SET_LOADING","SET_ERROR","actions","fetchSimulations","commit","response","axios","get","data","console","fetchSimulation","createSimulation","post","startSimulation","stopSimulation","resetSimulation","deleteSimulation","delete","updateCurrentSimulation","getters","getSimulationById","find","getCapturingTime","capture_time"],"sources":["F:/python/course/crowdsensing/frontend/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    simulations: [],\r\n    currentSimulation: null,\r\n    loading: false,\r\n    error: null\r\n  },\r\n  mutations: {\r\n    SET_SIMULATIONS(state, simulations) {\r\n      state.simulations = simulations\r\n    },\r\n    SET_CURRENT_SIMULATION(state, simulation) {\r\n      state.currentSimulation = simulation\r\n    },\r\n    UPDATE_SIMULATION(state, simulation) {\r\n      // 更新列表中的模拟\r\n      const index = state.simulations.findIndex(s => s.id === simulation.id)\r\n      if (index !== -1) {\r\n        state.simulations.splice(index, 1, simulation)\r\n      }\r\n      // 更新当前模拟\r\n      if (state.currentSimulation && state.currentSimulation.id === simulation.id) {\r\n        state.currentSimulation = simulation\r\n      }\r\n    },\r\n    ADD_SIMULATION(state, simulation) {\r\n      state.simulations.push(simulation)\r\n    },\r\n    REMOVE_SIMULATION(state, id) {\r\n      state.simulations = state.simulations.filter(s => s.id !== id)\r\n      if (state.currentSimulation && state.currentSimulation.id === id) {\r\n        state.currentSimulation = null\r\n      }\r\n    },\r\n    SET_LOADING(state, loading) {\r\n      state.loading = loading\r\n    },\r\n    SET_ERROR(state, error) {\r\n      state.error = error\r\n    }\r\n  },\r\n  actions: {\r\n    async fetchSimulations({ commit }) {\r\n      commit('SET_LOADING', true)\r\n      try {\r\n        const response = await Vue.axios.get('/simulations/')\r\n        commit('SET_SIMULATIONS', response.data)\r\n        commit('SET_ERROR', null)\r\n      } catch (error) {\r\n        console.error('Error fetching simulations:', error)\r\n        commit('SET_ERROR', 'Failed to fetch simulations')\r\n      } finally {\r\n        commit('SET_LOADING', false)\r\n      }\r\n    },\r\n    async fetchSimulation({ commit }, id) {\r\n      commit('SET_LOADING', true)\r\n      try {\r\n        const response = await Vue.axios.get(`/simulations/${id}`)\r\n        commit('SET_CURRENT_SIMULATION', response.data)\r\n        commit('SET_ERROR', null)\r\n      } catch (error) {\r\n        console.error(`Error fetching simulation ${id}:`, error)\r\n        commit('SET_ERROR', `Failed to fetch simulation ${id}`)\r\n      } finally {\r\n        commit('SET_LOADING', false)\r\n      }\r\n    },\r\n    async createSimulation({ commit }, simulation) {\r\n      commit('SET_LOADING', true)\r\n      try {\r\n        const response = await Vue.axios.post('/simulations/', simulation)\r\n        commit('ADD_SIMULATION', response.data)\r\n        commit('SET_ERROR', null)\r\n        return response.data\r\n      } catch (error) {\r\n        console.error('Error creating simulation:', error)\r\n        commit('SET_ERROR', 'Failed to create simulation')\r\n        throw error\r\n      } finally {\r\n        commit('SET_LOADING', false)\r\n      }\r\n    },\r\n    async startSimulation({ commit }, id) {\r\n      commit('SET_LOADING', true)\r\n      try {\r\n        await Vue.axios.post(`/simulations/${id}/start`)\r\n        commit('SET_ERROR', null)\r\n      } catch (error) {\r\n        console.error(`Error starting simulation ${id}:`, error)\r\n        commit('SET_ERROR', `Failed to start simulation ${id}`)\r\n        throw error\r\n      } finally {\r\n        commit('SET_LOADING', false)\r\n      }\r\n    },\r\n    async stopSimulation({ commit }, id) {\r\n      commit('SET_LOADING', true)\r\n      try {\r\n        await Vue.axios.post(`/simulations/${id}/stop`)\r\n        commit('SET_ERROR', null)\r\n      } catch (error) {\r\n        console.error(`Error stopping simulation ${id}:`, error)\r\n        commit('SET_ERROR', `Failed to stop simulation ${id}`)\r\n        throw error\r\n      } finally {\r\n        commit('SET_LOADING', false)\r\n      }\r\n    },\r\n    async resetSimulation({ commit }, id) {\r\n      commit('SET_LOADING', true)\r\n      try {\r\n        await Vue.axios.post(`/simulations/${id}/reset`)\r\n        const response = await Vue.axios.get(`/simulations/${id}`)\r\n        commit('UPDATE_SIMULATION', response.data)\r\n        commit('SET_ERROR', null)\r\n      } catch (error) {\r\n        console.error(`Error resetting simulation ${id}:`, error)\r\n        commit('SET_ERROR', `Failed to reset simulation ${id}`)\r\n        throw error\r\n      } finally {\r\n        commit('SET_LOADING', false)\r\n      }\r\n    },\r\n    async deleteSimulation({ commit }, id) {\r\n      commit('SET_LOADING', true)\r\n      try {\r\n        await Vue.axios.delete(`/simulations/${id}`)\r\n        commit('REMOVE_SIMULATION', id)\r\n        commit('SET_ERROR', null)\r\n      } catch (error) {\r\n        console.error(`Error deleting simulation ${id}:`, error)\r\n        commit('SET_ERROR', `Failed to delete simulation ${id}`)\r\n        throw error\r\n      } finally {\r\n        commit('SET_LOADING', false)\r\n      }\r\n    },\r\n    updateCurrentSimulation({ commit }, simulation) {\r\n      commit('SET_CURRENT_SIMULATION', simulation)\r\n    }\r\n  },\r\n  getters: {\r\n    getSimulationById: (state) => (id) => {\r\n      return state.simulations.find(s => s.id === id)\r\n    },\r\n    getCapturingTime: (state) => {\r\n      if (state.currentSimulation && state.currentSimulation.capture_time) {\r\n        return state.currentSimulation.capture_time\r\n      }\r\n      return null\r\n    }\r\n  }\r\n})"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}