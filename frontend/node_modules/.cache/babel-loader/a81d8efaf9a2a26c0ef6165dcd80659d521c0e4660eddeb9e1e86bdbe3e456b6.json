{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nexport default {\n  name: 'SimulationInfo',\n  props: {\n    simulation: {\n      type: Object,\n      required: true,\n      \"default\": function _default() {\n        return {};\n      }\n    }\n  },\n  methods: {\n    formatDate: function formatDate(dateString) {\n      if (!dateString) return '未知';\n      try {\n        var date = new Date(dateString);\n        // 检查日期是否有效\n        if (isNaN(date.getTime())) return '未知';\n        return date.toLocaleString();\n      } catch (e) {\n        console.error('日期格式化错误:', e, dateString);\n        return '未知';\n      }\n    },\n    formatAlgorithm: function formatAlgorithm(algorithm) {\n      var map = {\n        'APF': '人工势场法',\n        'CONSENSUS': '共识算法',\n        'ENCIRCLEMENT': '包围策略',\n        'ROLE_BASED': '基于角色的策略'\n      };\n      return map[algorithm] || algorithm;\n    },\n    formatCaptureTime: function formatCaptureTime(timeInSeconds) {\n      if (!timeInSeconds && timeInSeconds !== 0) return '未知';\n\n      // 格式化时间为分钟:秒\n      var minutes = Math.floor(timeInSeconds / 60);\n      var seconds = Math.floor(timeInSeconds % 60);\n      return \"\".concat(minutes, \"\\u5206\").concat(seconds, \"\\u79D2\");\n    },\n    getObstaclesCount: function getObstaclesCount() {\n      if (this.simulation.obstacles && Array.isArray(this.simulation.obstacles)) {\n        return this.simulation.obstacles.length;\n      } else {\n        return 0;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","simulation","type","Object","required","default","methods","formatDate","dateString","date","Date","isNaN","getTime","toLocaleString","e","console","error","formatAlgorithm","algorithm","map","formatCaptureTime","timeInSeconds","minutes","Math","floor","seconds","concat","getObstaclesCount","obstacles","Array","isArray","length"],"sources":["src/components/simulation/SimulationInfo.vue"],"sourcesContent":["<template>\r\n  <v-card class=\"simulation-info-card\">\r\n    <v-card-title class=\"info-title\">模拟信息</v-card-title>\r\n    <v-list dense class=\"info-list\">\r\n      <v-list-item>\r\n        <v-list-item-content>\r\n          <v-list-item-subtitle class=\"info-subtitle\">算法类型</v-list-item-subtitle>\r\n          <v-list-item-title class=\"info-value\">{{ formatAlgorithm(simulation.algorithm_type) }}</v-list-item-title>\r\n        </v-list-item-content>\r\n      </v-list-item>\r\n      \r\n      <v-list-item>\r\n        <v-list-item-content>\r\n          <v-list-item-subtitle class=\"info-subtitle\">猎手数量</v-list-item-subtitle>\r\n          <v-list-item-title class=\"info-value\">{{ simulation.hunters ? simulation.hunters.length : 0 }}</v-list-item-title>\r\n        </v-list-item-content>\r\n      </v-list-item>\r\n      \r\n      <v-list-item>\r\n        <v-list-item-content>\r\n          <v-list-item-subtitle class=\"info-subtitle\">目标数量</v-list-item-subtitle>\r\n          <v-list-item-title class=\"info-value\">{{ simulation.targets ? simulation.targets.length : 0 }}</v-list-item-title>\r\n        </v-list-item-content>\r\n      </v-list-item>\r\n      \r\n      <v-list-item>\r\n        <v-list-item-content>\r\n          <v-list-item-subtitle class=\"info-subtitle\">环境大小</v-list-item-subtitle>\r\n          <v-list-item-title class=\"info-value\">{{ simulation.environment_size || 500 }} x {{ simulation.environment_size || 500 }}</v-list-item-title>\r\n        </v-list-item-content>\r\n      </v-list-item>\r\n      \r\n      <v-list-item>\r\n        <v-list-item-content>\r\n          <v-list-item-subtitle class=\"info-subtitle\">当前步数</v-list-item-subtitle>\r\n          <v-list-item-title class=\"info-value\">{{ simulation.step_count || 0 }}</v-list-item-title>\r\n        </v-list-item-content>\r\n      </v-list-item>\r\n      \r\n      <v-list-item v-if=\"simulation.is_captured\">\r\n        <v-list-item-content>\r\n          <v-list-item-subtitle class=\"info-subtitle\">捕获时间</v-list-item-subtitle>\r\n          <v-list-item-title class=\"info-value\">{{ simulation.capture_time ? simulation.capture_time.toFixed(2) + ' 秒' : '未知' }}</v-list-item-title>\r\n        </v-list-item-content>\r\n      </v-list-item>\r\n      \r\n      <v-list-item>\r\n        <v-list-item-content>\r\n          <v-list-item-subtitle class=\"info-subtitle\">创建时间</v-list-item-subtitle>\r\n          <v-list-item-title class=\"info-value\">{{ formatDate(simulation.created_at) }}</v-list-item-title>\r\n        </v-list-item-content>\r\n      </v-list-item>\r\n      \r\n      <v-list-item>\r\n        <v-list-item-content>\r\n          <v-list-item-subtitle class=\"info-subtitle\">障碍物数量</v-list-item-subtitle>\r\n          <v-list-item-title class=\"info-value\">{{ getObstaclesCount() }}</v-list-item-title>\r\n        </v-list-item-content>\r\n      </v-list-item>\r\n    </v-list>\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'SimulationInfo',\r\n  props: {\r\n    simulation: {\r\n      type: Object,\r\n      required: true,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  methods: {\r\n    formatDate(dateString) {\r\n      if (!dateString) return '未知';\r\n      try {\r\n        const date = new Date(dateString);\r\n        // 检查日期是否有效\r\n        if (isNaN(date.getTime())) return '未知';\r\n        return date.toLocaleString();\r\n      } catch (e) {\r\n        console.error('日期格式化错误:', e, dateString);\r\n        return '未知';\r\n      }\r\n    },\r\n    \r\n    formatAlgorithm(algorithm) {\r\n      const map = {\r\n        'APF': '人工势场法',\r\n        'CONSENSUS': '共识算法',\r\n        'ENCIRCLEMENT': '包围策略',\r\n        'ROLE_BASED': '基于角色的策略'\r\n      };\r\n      return map[algorithm] || algorithm;\r\n    },\r\n\r\n    formatCaptureTime(timeInSeconds) {\r\n      if (!timeInSeconds && timeInSeconds !== 0) return '未知';\r\n      \r\n      // 格式化时间为分钟:秒\r\n      const minutes = Math.floor(timeInSeconds / 60);\r\n      const seconds = Math.floor(timeInSeconds % 60);\r\n      return `${minutes}分${seconds}秒`;\r\n    },\r\n    \r\n    getObstaclesCount() {\r\n      if (this.simulation.obstacles && Array.isArray(this.simulation.obstacles)) {\r\n        return this.simulation.obstacles.length;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.simulation-info-card {\r\n  border-radius: 4px;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.info-title {\r\n  font-size: 0.9rem;\r\n  padding: 8px 12px !important;\r\n  min-height: 32px !important;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.info-list {\r\n  padding: 0 !important;\r\n}\r\n\r\n.v-list-item {\r\n  min-height: 28px !important;\r\n  padding: 4px 12px !important;\r\n}\r\n\r\n.v-list-item__content {\r\n  padding: 2px 0 !important;\r\n}\r\n\r\n.info-subtitle {\r\n  font-size: 0.7rem !important;\r\n  color: rgba(0, 0, 0, 0.6) !important;\r\n}\r\n\r\n.info-value {\r\n  font-size: 0.8rem !important;\r\n  line-height: 1.2 !important;\r\n}\r\n\r\n@media (max-height: 768px) {\r\n  .v-list-item {\r\n    min-height: 24px !important;\r\n  }\r\n  \r\n  .info-value {\r\n    font-size: 0.75rem !important;\r\n  }\r\n}\r\n</style>"],"mappings":";;;AAgEA;EACAA,IAAA;EACAC,KAAA;IACAC,UAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;MACA,oBAAAC,SAAA;QAAA;MAAA;IACA;EACA;EACAC,OAAA;IACAC,UAAA,WAAAA,WAAAC,UAAA;MACA,KAAAA,UAAA;MACA;QACA,IAAAC,IAAA,OAAAC,IAAA,CAAAF,UAAA;QACA;QACA,IAAAG,KAAA,CAAAF,IAAA,CAAAG,OAAA;QACA,OAAAH,IAAA,CAAAI,cAAA;MACA,SAAAC,CAAA;QACAC,OAAA,CAAAC,KAAA,aAAAF,CAAA,EAAAN,UAAA;QACA;MACA;IACA;IAEAS,eAAA,WAAAA,gBAAAC,SAAA;MACA,IAAAC,GAAA;QACA;QACA;QACA;QACA;MACA;MACA,OAAAA,GAAA,CAAAD,SAAA,KAAAA,SAAA;IACA;IAEAE,iBAAA,WAAAA,kBAAAC,aAAA;MACA,KAAAA,aAAA,IAAAA,aAAA;;MAEA;MACA,IAAAC,OAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAH,aAAA;MACA,IAAAI,OAAA,GAAAF,IAAA,CAAAC,KAAA,CAAAH,aAAA;MACA,UAAAK,MAAA,CAAAJ,OAAA,YAAAI,MAAA,CAAAD,OAAA;IACA;IAEAE,iBAAA,WAAAA,kBAAA;MACA,SAAA1B,UAAA,CAAA2B,SAAA,IAAAC,KAAA,CAAAC,OAAA,MAAA7B,UAAA,CAAA2B,SAAA;QACA,YAAA3B,UAAA,CAAA2B,SAAA,CAAAG,MAAA;MACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}