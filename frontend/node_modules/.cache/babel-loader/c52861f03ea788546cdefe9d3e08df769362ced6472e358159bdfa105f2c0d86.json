{"ast":null,"code":"import _regeneratorRuntime from \"F:/python/course/crowdsensing/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"F:/python/course/crowdsensing/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"F:/python/course/crowdsensing/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"F:/python/course/crowdsensing/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"F:/python/course/crowdsensing/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    simulations: [],\n    currentSimulation: null,\n    loading: false,\n    error: null,\n    simulationAgents: {} // 新增：分离智能体状态存储\n  },\n  mutations: {\n    SET_SIMULATIONS: function SET_SIMULATIONS(state, simulations) {\n      state.simulations = simulations;\n    },\n    SET_CURRENT_SIMULATION: function SET_CURRENT_SIMULATION(state, simulation) {\n      state.currentSimulation = simulation;\n\n      // 同时更新智能体状态\n      if (simulation && simulation.id) {\n        state.simulationAgents[simulation.id] = {\n          hunters: simulation.hunters || [],\n          targets: simulation.targets || []\n        };\n      }\n    },\n    UPDATE_SIMULATION: function UPDATE_SIMULATION(state, simulation) {\n      // 更新列表中的模拟\n      var index = state.simulations.findIndex(function (s) {\n        return s.id === simulation.id;\n      });\n      if (index !== -1) {\n        // 创建新对象进行更新（更好的响应式性能）\n        state.simulations = [].concat(_toConsumableArray(state.simulations.slice(0, index)), [simulation], _toConsumableArray(state.simulations.slice(index + 1)));\n      }\n\n      // 更新当前模拟\n      if (state.currentSimulation && state.currentSimulation.id === simulation.id) {\n        state.currentSimulation = _objectSpread({}, simulation);\n      }\n    },\n    UPDATE_SIMULATION_STATUS: function UPDATE_SIMULATION_STATUS(state, _ref) {\n      var simulationId = _ref.simulationId,\n        isRunning = _ref.isRunning,\n        isCaptured = _ref.isCaptured,\n        isEscaped = _ref.isEscaped;\n      // 更新列表中的模拟\n      var index = state.simulations.findIndex(function (s) {\n        return s.id === simulationId;\n      });\n      if (index !== -1) {\n        // 创建新对象更新状态\n        var updatedSimulation = _objectSpread(_objectSpread({}, state.simulations[index]), {}, {\n          is_running: isRunning,\n          is_captured: isCaptured,\n          escaped: isEscaped\n        });\n        state.simulations = [].concat(_toConsumableArray(state.simulations.slice(0, index)), [updatedSimulation], _toConsumableArray(state.simulations.slice(index + 1)));\n      }\n\n      // 更新当前模拟\n      if (state.currentSimulation && state.currentSimulation.id === simulationId) {\n        state.currentSimulation = _objectSpread(_objectSpread({}, state.currentSimulation), {}, {\n          is_running: isRunning,\n          is_captured: isCaptured,\n          escaped: isEscaped\n        });\n      }\n    },\n    // 新增：只更新智能体状态，避免不必要的完整更新\n    UPDATE_SIMULATION_AGENTS: function UPDATE_SIMULATION_AGENTS(state, _ref2) {\n      var simulationId = _ref2.simulationId,\n        hunters = _ref2.hunters,\n        targets = _ref2.targets;\n      if (state.simulationAgents[simulationId]) {\n        state.simulationAgents[simulationId] = {\n          hunters: _toConsumableArray(hunters),\n          targets: _toConsumableArray(targets)\n        };\n\n        // 如果是当前模拟，同步更新currentSimulation\n        if (state.currentSimulation && state.currentSimulation.id === simulationId) {\n          state.currentSimulation = _objectSpread(_objectSpread({}, state.currentSimulation), {}, {\n            hunters: _toConsumableArray(hunters),\n            targets: _toConsumableArray(targets)\n          });\n        }\n      }\n    },\n    // 更新模拟的单个属性\n    UPDATE_SIMULATION_PROPERTY: function UPDATE_SIMULATION_PROPERTY(state, _ref3) {\n      var simulationId = _ref3.simulationId,\n        property = _ref3.property,\n        value = _ref3.value;\n      // 更新列表中的模拟\n      var index = state.simulations.findIndex(function (s) {\n        return s.id === simulationId;\n      });\n      if (index !== -1) {\n        var updatedSimulation = _objectSpread(_objectSpread({}, state.simulations[index]), {}, _defineProperty({}, property, value));\n        state.simulations = [].concat(_toConsumableArray(state.simulations.slice(0, index)), [updatedSimulation], _toConsumableArray(state.simulations.slice(index + 1)));\n      }\n\n      // 更新当前模拟\n      if (state.currentSimulation && state.currentSimulation.id === simulationId) {\n        state.currentSimulation = _objectSpread(_objectSpread({}, state.currentSimulation), {}, _defineProperty({}, property, value));\n      }\n    },\n    ADD_SIMULATION: function ADD_SIMULATION(state, simulation) {\n      state.simulations = [].concat(_toConsumableArray(state.simulations), [simulation]);\n\n      // 初始化智能体状态\n      if (simulation && simulation.id) {\n        state.simulationAgents[simulation.id] = {\n          hunters: simulation.hunters || [],\n          targets: simulation.targets || []\n        };\n      }\n    },\n    REMOVE_SIMULATION: function REMOVE_SIMULATION(state, id) {\n      state.simulations = state.simulations.filter(function (s) {\n        return s.id !== id;\n      });\n      if (state.currentSimulation && state.currentSimulation.id === id) {\n        state.currentSimulation = null;\n      }\n\n      // 清理智能体状态\n      if (state.simulationAgents[id]) {\n        Vue[\"delete\"](state.simulationAgents, id);\n      }\n    },\n    SET_LOADING: function SET_LOADING(state, loading) {\n      state.loading = loading;\n    },\n    SET_ERROR: function SET_ERROR(state, error) {\n      state.error = error;\n    }\n  },\n  actions: {\n    fetchSimulations: function fetchSimulations(_ref4) {\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var commit, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref4.commit;\n              commit('SET_LOADING', true);\n              _context.prev = 2;\n              _context.next = 5;\n              return Vue.axios.get('/simulations/');\n            case 5:\n              response = _context.sent;\n              commit('SET_SIMULATIONS', response.data);\n              commit('SET_ERROR', null);\n              return _context.abrupt(\"return\", response.data);\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n              console.error('Error fetching simulations:', _context.t0);\n              commit('SET_ERROR', '获取模拟列表失败');\n              throw _context.t0;\n            case 16:\n              _context.prev = 16;\n              commit('SET_LOADING', false);\n              return _context.finish(16);\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 11, 16, 19]]);\n      }))();\n    },\n    fetchSimulation: function fetchSimulation(_ref5, id) {\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var commit, response, simulation;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref5.commit;\n              commit('SET_LOADING', true);\n              _context2.prev = 2;\n              _context2.next = 5;\n              return Vue.axios.get(\"/simulations/\".concat(id));\n            case 5:\n              response = _context2.sent;\n              // 确保时间戳字段存在且格式正确\n              simulation = response.data; // 如果创建时间为null或undefined，使用当前时间\n              if (simulation.created_at) {\n                _context2.next = 17;\n                break;\n              }\n              simulation.created_at = new Date().toISOString();\n              // 可选：尝试更新数据库中的记录\n              _context2.prev = 9;\n              _context2.next = 12;\n              return Vue.axios.put(\"/simulations/\".concat(id, \"/update-timestamp\"), {\n                created_at: simulation.created_at\n              });\n            case 12:\n              _context2.next = 17;\n              break;\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](9);\n              console.warn('更新时间戳失败，使用本地时间:', _context2.t0);\n            case 17:\n              commit('SET_CURRENT_SIMULATION', simulation);\n              commit('SET_ERROR', null);\n              return _context2.abrupt(\"return\", simulation);\n            case 22:\n              _context2.prev = 22;\n              _context2.t1 = _context2[\"catch\"](2);\n              console.error(\"\\u83B7\\u53D6\\u6A21\\u62DF\\u8BE6\\u60C5\\u5931\\u8D25(ID: \".concat(id, \"):\"), _context2.t1);\n              commit('SET_ERROR', \"\\u83B7\\u53D6\\u6A21\\u62DF\\u8BE6\\u60C5\\u5931\\u8D25\");\n              throw _context2.t1;\n            case 27:\n              _context2.prev = 27;\n              commit('SET_LOADING', false);\n              return _context2.finish(27);\n            case 30:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[2, 22, 27, 30], [9, 14]]);\n      }))();\n    },\n    updateSimulationStatus: function updateSimulationStatus(_ref6, _ref7) {\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var commit, simulationId, isRunning, isCaptured, isEscaped;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref6.commit;\n              simulationId = _ref7.simulationId, isRunning = _ref7.isRunning, isCaptured = _ref7.isCaptured, isEscaped = _ref7.isEscaped;\n              commit('UPDATE_SIMULATION_STATUS', {\n                simulationId: simulationId,\n                isRunning: isRunning,\n                isCaptured: isCaptured\n              });\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    },\n    createSimulation: function createSimulation(_ref8, simulation) {\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var commit, response;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref8.commit;\n              commit('SET_LOADING', true);\n              _context4.prev = 2;\n              _context4.next = 5;\n              return Vue.axios.post('/simulations/', simulation);\n            case 5:\n              response = _context4.sent;\n              commit('ADD_SIMULATION', response.data);\n              commit('SET_ERROR', null);\n              return _context4.abrupt(\"return\", response.data);\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](2);\n              console.error('Error creating simulation:', _context4.t0);\n              commit('SET_ERROR', '创建模拟失败');\n              throw _context4.t0;\n            case 16:\n              _context4.prev = 16;\n              commit('SET_LOADING', false);\n              return _context4.finish(16);\n            case 19:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[2, 11, 16, 19]]);\n      }))();\n    },\n    startSimulation: function startSimulation(_ref9, id) {\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var commit, response;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref9.commit;\n              commit('SET_LOADING', true);\n              _context5.prev = 2;\n              _context5.next = 5;\n              return Vue.axios.post(\"/simulations/\".concat(id, \"/start\"));\n            case 5:\n              response = _context5.sent;\n              // 更新模拟状态为运行中\n              commit('UPDATE_SIMULATION_PROPERTY', {\n                simulationId: id,\n                property: 'is_running',\n                value: true\n              });\n              commit('SET_ERROR', null);\n              return _context5.abrupt(\"return\", response);\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](2);\n              console.error(\"Error starting simulation \".concat(id, \":\"), _context5.t0);\n              commit('SET_ERROR', '启动模拟失败');\n              throw _context5.t0;\n            case 16:\n              _context5.prev = 16;\n              commit('SET_LOADING', false);\n              return _context5.finish(16);\n            case 19:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[2, 11, 16, 19]]);\n      }))();\n    },\n    stopSimulation: function stopSimulation(_ref10, id) {\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var commit, response;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              commit = _ref10.commit;\n              commit('SET_LOADING', true);\n              _context6.prev = 2;\n              _context6.next = 5;\n              return Vue.axios.post(\"/simulations/\".concat(id, \"/stop\"));\n            case 5:\n              response = _context6.sent;\n              // 更新模拟状态为停止\n              commit('UPDATE_SIMULATION_PROPERTY', {\n                simulationId: id,\n                property: 'is_running',\n                value: false\n              });\n              commit('SET_ERROR', null);\n              return _context6.abrupt(\"return\", response);\n            case 11:\n              _context6.prev = 11;\n              _context6.t0 = _context6[\"catch\"](2);\n              console.error(\"Error stopping simulation \".concat(id, \":\"), _context6.t0);\n              commit('SET_ERROR', '停止模拟失败');\n              throw _context6.t0;\n            case 16:\n              _context6.prev = 16;\n              commit('SET_LOADING', false);\n              return _context6.finish(16);\n            case 19:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, null, [[2, 11, 16, 19]]);\n      }))();\n    },\n    resetSimulation: function resetSimulation(_ref11, id) {\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var commit, response;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              commit = _ref11.commit;\n              commit('SET_LOADING', true);\n              _context7.prev = 2;\n              _context7.next = 5;\n              return Vue.axios.post(\"/simulations/\".concat(id, \"/reset\"));\n            case 5:\n              _context7.next = 7;\n              return Vue.axios.get(\"/simulations/\".concat(id));\n            case 7:\n              response = _context7.sent;\n              commit('UPDATE_SIMULATION', response.data);\n              commit('SET_ERROR', null);\n              return _context7.abrupt(\"return\", response.data);\n            case 13:\n              _context7.prev = 13;\n              _context7.t0 = _context7[\"catch\"](2);\n              console.error(\"Error resetting simulation \".concat(id, \":\"), _context7.t0);\n              commit('SET_ERROR', '重置模拟失败');\n              throw _context7.t0;\n            case 18:\n              _context7.prev = 18;\n              commit('SET_LOADING', false);\n              return _context7.finish(18);\n            case 21:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, null, [[2, 13, 18, 21]]);\n      }))();\n    },\n    deleteSimulation: function deleteSimulation(_ref12, id) {\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var commit;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              commit = _ref12.commit;\n              commit('SET_LOADING', true);\n              _context8.prev = 2;\n              _context8.next = 5;\n              return Vue.axios[\"delete\"](\"/simulations/\".concat(id));\n            case 5:\n              commit('REMOVE_SIMULATION', id);\n              commit('SET_ERROR', null);\n              _context8.next = 14;\n              break;\n            case 9:\n              _context8.prev = 9;\n              _context8.t0 = _context8[\"catch\"](2);\n              console.error(\"Error deleting simulation \".concat(id, \":\"), _context8.t0);\n              commit('SET_ERROR', '删除模拟失败');\n              throw _context8.t0;\n            case 14:\n              _context8.prev = 14;\n              commit('SET_LOADING', false);\n              return _context8.finish(14);\n            case 17:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, null, [[2, 9, 14, 17]]);\n      }))();\n    },\n    // 高效更新智能体状态\n    updateSimulationAgents: function updateSimulationAgents(_ref13, _ref14) {\n      var commit = _ref13.commit;\n      var simulationId = _ref14.simulationId,\n        hunters = _ref14.hunters,\n        targets = _ref14.targets;\n      commit('UPDATE_SIMULATION_AGENTS', {\n        simulationId: simulationId,\n        hunters: hunters,\n        targets: targets\n      });\n    },\n    // 高效更新模拟属性\n    updateSimulationProperty: function updateSimulationProperty(_ref15, _ref16) {\n      var commit = _ref15.commit;\n      var simulationId = _ref16.simulationId,\n        property = _ref16.property,\n        value = _ref16.value;\n      commit('UPDATE_SIMULATION_PROPERTY', {\n        simulationId: simulationId,\n        property: property,\n        value: value\n      });\n    }\n  },\n  getters: {\n    getSimulationById: function getSimulationById(state) {\n      return function (id) {\n        return state.simulations.find(function (s) {\n          return s.id === id;\n        });\n      };\n    },\n    getSimulationAgents: function getSimulationAgents(state) {\n      return function (id) {\n        return state.simulationAgents[id] || {\n          hunters: [],\n          targets: []\n        };\n      };\n    },\n    getCapturingTime: function getCapturingTime(state) {\n      if (state.currentSimulation && state.currentSimulation.capture_time) {\n        return state.currentSimulation.capture_time;\n      }\n      return null;\n    },\n    // 计算智能体与目标的距离\n    getAgentDistances: function getAgentDistances(state) {\n      return function (simulationId) {\n        var agents = state.simulationAgents[simulationId];\n        if (!agents || !agents.hunters.length || !agents.targets.length) {\n          return {};\n        }\n        var target = agents.targets[0]; // 假设单目标\n        var distances = {};\n        agents.hunters.forEach(function (hunter) {\n          var hunterPos = hunter.position;\n          var targetPos = target.position;\n          var distance = Math.sqrt(Math.pow(hunterPos[0] - targetPos[0], 2) + Math.pow(hunterPos[1] - targetPos[1], 2));\n          distances[hunter.id] = Math.round(distance * 100) / 100;\n        });\n        return distances;\n      };\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","use","Store","state","simulations","currentSimulation","loading","error","simulationAgents","mutations","SET_SIMULATIONS","SET_CURRENT_SIMULATION","simulation","id","hunters","targets","UPDATE_SIMULATION","index","findIndex","s","concat","_toConsumableArray","slice","_objectSpread","UPDATE_SIMULATION_STATUS","_ref","simulationId","isRunning","isCaptured","isEscaped","updatedSimulation","is_running","is_captured","escaped","UPDATE_SIMULATION_AGENTS","_ref2","UPDATE_SIMULATION_PROPERTY","_ref3","property","value","_defineProperty","ADD_SIMULATION","REMOVE_SIMULATION","filter","SET_LOADING","SET_ERROR","actions","fetchSimulations","_ref4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","commit","response","wrap","_callee$","_context","prev","next","axios","get","sent","data","abrupt","t0","console","finish","stop","fetchSimulation","_ref5","_callee2","_callee2$","_context2","created_at","Date","toISOString","put","warn","t1","updateSimulationStatus","_ref6","_ref7","_callee3","_callee3$","_context3","createSimulation","_ref8","_callee4","_callee4$","_context4","post","startSimulation","_ref9","_callee5","_callee5$","_context5","stopSimulation","_ref10","_callee6","_callee6$","_context6","resetSimulation","_ref11","_callee7","_callee7$","_context7","deleteSimulation","_ref12","_callee8","_callee8$","_context8","updateSimulationAgents","_ref13","_ref14","updateSimulationProperty","_ref15","_ref16","getters","getSimulationById","find","getSimulationAgents","getCapturingTime","capture_time","getAgentDistances","agents","length","target","distances","forEach","hunter","hunterPos","position","targetPos","distance","Math","sqrt","pow","round"],"sources":["F:/python/course/crowdsensing/frontend/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    simulations: [],\r\n    currentSimulation: null,\r\n    loading: false,\r\n    error: null,\r\n    simulationAgents: {}, // 新增：分离智能体状态存储\r\n  },\r\n  mutations: {\r\n    SET_SIMULATIONS(state, simulations) {\r\n      state.simulations = simulations;\r\n    },\r\n    SET_CURRENT_SIMULATION(state, simulation) {\r\n      state.currentSimulation = simulation;\r\n      \r\n      // 同时更新智能体状态\r\n      if (simulation && simulation.id) {\r\n        state.simulationAgents[simulation.id] = {\r\n          hunters: simulation.hunters || [],\r\n          targets: simulation.targets || []\r\n        };\r\n      }\r\n    },\r\n    UPDATE_SIMULATION(state, simulation) {\r\n      // 更新列表中的模拟\r\n      const index = state.simulations.findIndex(s => s.id === simulation.id);\r\n      if (index !== -1) {\r\n        // 创建新对象进行更新（更好的响应式性能）\r\n        state.simulations = [\r\n          ...state.simulations.slice(0, index),\r\n          simulation,\r\n          ...state.simulations.slice(index + 1)\r\n        ];\r\n      }\r\n      \r\n      // 更新当前模拟\r\n      if (state.currentSimulation && state.currentSimulation.id === simulation.id) {\r\n        state.currentSimulation = {...simulation};\r\n      }\r\n    },\r\n    UPDATE_SIMULATION_STATUS(state, { simulationId, isRunning, isCaptured, isEscaped }) {\r\n      // 更新列表中的模拟\r\n      const index = state.simulations.findIndex(s => s.id === simulationId);\r\n      if (index !== -1) {\r\n        // 创建新对象更新状态\r\n        const updatedSimulation = {\r\n          ...state.simulations[index],\r\n          is_running: isRunning,\r\n          is_captured: isCaptured,\r\n          escaped: isEscaped\r\n        };\r\n        \r\n        state.simulations = [\r\n          ...state.simulations.slice(0, index),\r\n          updatedSimulation,\r\n          ...state.simulations.slice(index + 1)\r\n        ];\r\n      }\r\n      \r\n      // 更新当前模拟\r\n      if (state.currentSimulation && state.currentSimulation.id === simulationId) {\r\n        state.currentSimulation = {\r\n          ...state.currentSimulation,\r\n          is_running: isRunning,\r\n          is_captured: isCaptured,\r\n          escaped: isEscaped\r\n        };\r\n      }\r\n    },    \r\n    // 新增：只更新智能体状态，避免不必要的完整更新\r\n    UPDATE_SIMULATION_AGENTS(state, { simulationId, hunters, targets }) {\r\n      if (state.simulationAgents[simulationId]) {\r\n        state.simulationAgents[simulationId] = {\r\n          hunters: [...hunters],\r\n          targets: [...targets]\r\n        };\r\n        \r\n        // 如果是当前模拟，同步更新currentSimulation\r\n        if (state.currentSimulation && state.currentSimulation.id === simulationId) {\r\n          state.currentSimulation = {\r\n            ...state.currentSimulation,\r\n            hunters: [...hunters],\r\n            targets: [...targets]\r\n          };\r\n        }\r\n      }\r\n    },\r\n    // 更新模拟的单个属性\r\n    UPDATE_SIMULATION_PROPERTY(state, { simulationId, property, value }) {\r\n      // 更新列表中的模拟\r\n      const index = state.simulations.findIndex(s => s.id === simulationId);\r\n      if (index !== -1) {\r\n        const updatedSimulation = {\r\n          ...state.simulations[index],\r\n          [property]: value\r\n        };\r\n        \r\n        state.simulations = [\r\n          ...state.simulations.slice(0, index),\r\n          updatedSimulation,\r\n          ...state.simulations.slice(index + 1)\r\n        ];\r\n      }\r\n      \r\n      // 更新当前模拟\r\n      if (state.currentSimulation && state.currentSimulation.id === simulationId) {\r\n        state.currentSimulation = {\r\n          ...state.currentSimulation,\r\n          [property]: value\r\n        };\r\n      }\r\n    },\r\n    ADD_SIMULATION(state, simulation) {\r\n      state.simulations = [...state.simulations, simulation];\r\n      \r\n      // 初始化智能体状态\r\n      if (simulation && simulation.id) {\r\n        state.simulationAgents[simulation.id] = {\r\n          hunters: simulation.hunters || [],\r\n          targets: simulation.targets || []\r\n        };\r\n      }\r\n    },\r\n    REMOVE_SIMULATION(state, id) {\r\n      state.simulations = state.simulations.filter(s => s.id !== id);\r\n      \r\n      if (state.currentSimulation && state.currentSimulation.id === id) {\r\n        state.currentSimulation = null;\r\n      }\r\n      \r\n      // 清理智能体状态\r\n      if (state.simulationAgents[id]) {\r\n        Vue.delete(state.simulationAgents, id);\r\n      }\r\n    },\r\n    SET_LOADING(state, loading) {\r\n      state.loading = loading;\r\n    },\r\n    SET_ERROR(state, error) {\r\n      state.error = error;\r\n    }\r\n  },\r\n  actions: {\r\n    async fetchSimulations({ commit }) {\r\n      commit('SET_LOADING', true);\r\n      try {\r\n        const response = await Vue.axios.get('/simulations/');\r\n        commit('SET_SIMULATIONS', response.data);\r\n        commit('SET_ERROR', null);\r\n        return response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching simulations:', error);\r\n        commit('SET_ERROR', '获取模拟列表失败');\r\n        throw error;\r\n      } finally {\r\n        commit('SET_LOADING', false);\r\n      }\r\n    },\r\n    async fetchSimulation({ commit }, id) {\r\n      commit('SET_LOADING', true);\r\n      try {\r\n        const response = await Vue.axios.get(`/simulations/${id}`);\r\n        \r\n        // 确保时间戳字段存在且格式正确\r\n        const simulation = response.data;\r\n        \r\n        // 如果创建时间为null或undefined，使用当前时间\r\n        if (!simulation.created_at) {\r\n          simulation.created_at = new Date().toISOString();\r\n          // 可选：尝试更新数据库中的记录\r\n          try {\r\n            await Vue.axios.put(`/simulations/${id}/update-timestamp`, { \r\n              created_at: simulation.created_at \r\n            });\r\n          } catch (updateError) {\r\n            console.warn('更新时间戳失败，使用本地时间:', updateError);\r\n          }\r\n        }\r\n        \r\n        commit('SET_CURRENT_SIMULATION', simulation);\r\n        commit('SET_ERROR', null);\r\n        return simulation;\r\n      } catch (error) {\r\n        console.error(`获取模拟详情失败(ID: ${id}):`, error);\r\n        commit('SET_ERROR', `获取模拟详情失败`);\r\n        throw error;\r\n      } finally {\r\n        commit('SET_LOADING', false);\r\n      }\r\n    },\r\n    async updateSimulationStatus({ commit }, { simulationId, isRunning, isCaptured, isEscaped }) {\r\n      commit('UPDATE_SIMULATION_STATUS', { simulationId, isRunning, isCaptured });\r\n    },\r\n    async createSimulation({ commit }, simulation) {\r\n      commit('SET_LOADING', true);\r\n      try {\r\n        const response = await Vue.axios.post('/simulations/', simulation);\r\n        commit('ADD_SIMULATION', response.data);\r\n        commit('SET_ERROR', null);\r\n        return response.data;\r\n      } catch (error) {\r\n        console.error('Error creating simulation:', error);\r\n        commit('SET_ERROR', '创建模拟失败');\r\n        throw error;\r\n      } finally {\r\n        commit('SET_LOADING', false);\r\n      }\r\n    },\r\n    async startSimulation({ commit }, id) {\r\n      commit('SET_LOADING', true);\r\n      try {\r\n        const response = await Vue.axios.post(`/simulations/${id}/start`);\r\n        // 更新模拟状态为运行中\r\n        commit('UPDATE_SIMULATION_PROPERTY', { \r\n          simulationId: id, \r\n          property: 'is_running', \r\n          value: true \r\n        });\r\n        commit('SET_ERROR', null);\r\n        return response;\r\n      } catch (error) {\r\n        console.error(`Error starting simulation ${id}:`, error);\r\n        commit('SET_ERROR', '启动模拟失败');\r\n        throw error;\r\n      } finally {\r\n        commit('SET_LOADING', false);\r\n      }\r\n    },\r\n    async stopSimulation({ commit }, id) {\r\n      commit('SET_LOADING', true);\r\n      try {\r\n        const response = await Vue.axios.post(`/simulations/${id}/stop`);\r\n        // 更新模拟状态为停止\r\n        commit('UPDATE_SIMULATION_PROPERTY', { \r\n          simulationId: id, \r\n          property: 'is_running', \r\n          value: false \r\n        });\r\n        commit('SET_ERROR', null);\r\n        return response;\r\n      } catch (error) {\r\n        console.error(`Error stopping simulation ${id}:`, error);\r\n        commit('SET_ERROR', '停止模拟失败');\r\n        throw error;\r\n      } finally {\r\n        commit('SET_LOADING', false);\r\n      }\r\n    },\r\n    async resetSimulation({ commit }, id) {\r\n      commit('SET_LOADING', true);\r\n      try {\r\n        await Vue.axios.post(`/simulations/${id}/reset`);\r\n        // 重新获取模拟数据\r\n        const response = await Vue.axios.get(`/simulations/${id}`);\r\n        commit('UPDATE_SIMULATION', response.data);\r\n        commit('SET_ERROR', null);\r\n        return response.data;\r\n      } catch (error) {\r\n        console.error(`Error resetting simulation ${id}:`, error);\r\n        commit('SET_ERROR', '重置模拟失败');\r\n        throw error;\r\n      } finally {\r\n        commit('SET_LOADING', false);\r\n      }\r\n    },\r\n    async deleteSimulation({ commit }, id) {\r\n      commit('SET_LOADING', true);\r\n      try {\r\n        await Vue.axios.delete(`/simulations/${id}`);\r\n        commit('REMOVE_SIMULATION', id);\r\n        commit('SET_ERROR', null);\r\n      } catch (error) {\r\n        console.error(`Error deleting simulation ${id}:`, error);\r\n        commit('SET_ERROR', '删除模拟失败');\r\n        throw error;\r\n      } finally {\r\n        commit('SET_LOADING', false);\r\n      }\r\n    },\r\n    // 高效更新智能体状态\r\n    updateSimulationAgents({ commit }, { simulationId, hunters, targets }) {\r\n      commit('UPDATE_SIMULATION_AGENTS', { simulationId, hunters, targets });\r\n    },\r\n    // 高效更新模拟属性\r\n    updateSimulationProperty({ commit }, { simulationId, property, value }) {\r\n      commit('UPDATE_SIMULATION_PROPERTY', { simulationId, property, value });\r\n    }\r\n  },\r\n  getters: {\r\n    getSimulationById: (state) => (id) => {\r\n      return state.simulations.find(s => s.id === id);\r\n    },\r\n    getSimulationAgents: (state) => (id) => {\r\n      return state.simulationAgents[id] || { hunters: [], targets: [] };\r\n    },\r\n    getCapturingTime: (state) => {\r\n      if (state.currentSimulation && state.currentSimulation.capture_time) {\r\n        return state.currentSimulation.capture_time;\r\n      }\r\n      return null;\r\n    },\r\n    // 计算智能体与目标的距离\r\n    getAgentDistances: (state) => (simulationId) => {\r\n      const agents = state.simulationAgents[simulationId];\r\n      if (!agents || !agents.hunters.length || !agents.targets.length) {\r\n        return {};\r\n      }\r\n      \r\n      const target = agents.targets[0]; // 假设单目标\r\n      const distances = {};\r\n      \r\n      agents.hunters.forEach(hunter => {\r\n        const hunterPos = hunter.position;\r\n        const targetPos = target.position;\r\n        const distance = Math.sqrt(\r\n          Math.pow(hunterPos[0] - targetPos[0], 2) + \r\n          Math.pow(hunterPos[1] - targetPos[1], 2)\r\n        );\r\n        distances[hunter.id] = Math.round(distance * 100) / 100;\r\n      });\r\n      \r\n      return distances;\r\n    }\r\n  }\r\n})"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}