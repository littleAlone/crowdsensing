{"ast":null,"code":"import _regeneratorRuntime from \"F:/python/course/crowdsensing/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"F:/python/course/crowdsensing/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'SimulationCreate',\n  data: function data() {\n    return {\n      valid: true,\n      loading: false,\n      simulation: {\n        name: '',\n        description: '',\n        environment_size: 500,\n        num_hunters: 5,\n        num_targets: 1,\n        algorithm_type: 'APF',\n        max_steps: 1000\n      },\n      algorithmOptions: [{\n        text: '人工势场法 (APF)',\n        value: 'APF'\n      }, {\n        text: '共识算法 (CONSENSUS)',\n        value: 'CONSENSUS'\n      }]\n    };\n  },\n  methods: {\n    resetForm: function resetForm() {\n      this.$refs.form.reset();\n      this.simulation = {\n        name: '',\n        description: '',\n        environment_size: 500,\n        num_hunters: 5,\n        num_targets: 1,\n        algorithm_type: 'APF',\n        max_steps: 1000\n      };\n    },\n    createSimulation: function createSimulation() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (_this.$refs.form.validate()) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              _this.loading = true;\n              _context.prev = 3;\n              _context.next = 6;\n              return _this.$('/simulations/', _this.simulation);\n            case 6:\n              response = _context.sent;\n              _this.$toast.success('模拟创建成功');\n              _this.$router.push(\"/simulations/\".concat(response.data.id));\n              _context.next = 15;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](3);\n              console.error('Failed to create simulation:', _context.t0);\n              _this.$toast.error('创建模拟失败');\n            case 15:\n              _context.prev = 15;\n              _this.loading = false;\n              return _context.finish(15);\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[3, 11, 15, 18]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["name","data","valid","loading","simulation","description","environment_size","num_hunters","num_targets","algorithm_type","max_steps","algorithmOptions","text","value","methods","resetForm","$refs","form","reset","createSimulation","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","validate","abrupt","$","sent","$toast","success","$router","push","concat","id","t0","console","error","finish","stop"],"sources":["src/views/SimulationCreate.vue"],"sourcesContent":["<template>\r\n    <div class=\"simulation-create\">\r\n      <v-container>\r\n        <v-row>\r\n          <v-col cols=\"12\" md=\"8\" offset-md=\"2\">\r\n            <v-card>\r\n              <v-card-title class=\"headline\">创建新模拟</v-card-title>\r\n              \r\n              <v-card-text>\r\n                <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\r\n                  <v-text-field\r\n                    v-model=\"simulation.name\"\r\n                    label=\"模拟名称\"\r\n                    required\r\n                    :rules=\"[v => !!v || '名称不能为空']\"\r\n                  ></v-text-field>\r\n                  \r\n                  <v-textarea\r\n                    v-model=\"simulation.description\"\r\n                    label=\"模拟描述\"\r\n                    rows=\"3\"\r\n                  ></v-textarea>\r\n                  \r\n                  <v-select\r\n                    v-model=\"simulation.algorithm_type\"\r\n                    :items=\"algorithmOptions\"\r\n                    label=\"算法类型\"\r\n                    required\r\n                    :rules=\"[v => !!v || '请选择算法类型']\"\r\n                  ></v-select>\r\n                  \r\n                  <v-slider\r\n                    v-model=\"simulation.environment_size\"\r\n                    label=\"环境大小\"\r\n                    min=\"200\"\r\n                    max=\"1000\"\r\n                    step=\"50\"\r\n                    thumb-label=\"always\"\r\n                    class=\"mt-4\"\r\n                  ></v-slider>\r\n                  \r\n                  <v-slider\r\n                    v-model=\"simulation.num_hunters\"\r\n                    label=\"猎手数量\"\r\n                    min=\"1\"\r\n                    max=\"10\"\r\n                    step=\"1\"\r\n                    thumb-label=\"always\"\r\n                    class=\"mt-4\"\r\n                  ></v-slider>\r\n                  \r\n                  <v-slider\r\n                    v-model=\"simulation.num_targets\"\r\n                    label=\"目标数量\"\r\n                    min=\"1\"\r\n                    max=\"3\"\r\n                    step=\"1\"\r\n                    thumb-label=\"always\"\r\n                    class=\"mt-4\"\r\n                  ></v-slider>\r\n                  \r\n                  <v-slider\r\n                    v-model=\"simulation.max_steps\"\r\n                    label=\"最大步数\"\r\n                    min=\"500\"\r\n                    max=\"5000\"\r\n                    step=\"500\"\r\n                    thumb-label=\"always\"\r\n                    class=\"mt-4\"\r\n                  ></v-slider>\r\n                </v-form>\r\n              </v-card-text>\r\n              \r\n              <v-card-actions>\r\n                <v-btn text color=\"primary\" @click=\"$router.push('/simulations')\">\r\n                  <v-icon left>mdi-arrow-left</v-icon> 返回列表\r\n                </v-btn>\r\n                <v-spacer></v-spacer>\r\n                <v-btn text @click=\"resetForm\">\r\n                  <v-icon left>mdi-refresh</v-icon> 重置\r\n                </v-btn>\r\n                <v-btn color=\"primary\" :disabled=\"!valid\" :loading=\"loading\" @click=\"createSimulation\">\r\n                  <v-icon left>mdi-plus</v-icon> 创建\r\n                </v-btn>\r\n              </v-card-actions>\r\n            </v-card>\r\n          </v-col>\r\n        </v-row>\r\n      </v-container>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'SimulationCreate',\r\n    data() {\r\n      return {\r\n        valid: true,\r\n        loading: false,\r\n        simulation: {\r\n          name: '',\r\n          description: '',\r\n          environment_size: 500,\r\n          num_hunters: 5,\r\n          num_targets: 1,\r\n          algorithm_type: 'APF',\r\n          max_steps: 1000\r\n        },\r\n        algorithmOptions: [\r\n          { text: '人工势场法 (APF)', value: 'APF' },\r\n          { text: '共识算法 (CONSENSUS)', value: 'CONSENSUS' }\r\n        ]\r\n      }\r\n    },\r\n    methods: {\r\n      resetForm() {\r\n        this.$refs.form.reset()\r\n        this.simulation = {\r\n          name: '',\r\n          description: '',\r\n          environment_size: 500,\r\n          num_hunters: 5,\r\n          num_targets: 1,\r\n          algorithm_type: 'APF',\r\n          max_steps: 1000\r\n        }\r\n      },\r\n      async createSimulation() {\r\n        if (!this.$refs.form.validate()) return\r\n        \r\n        this.loading = true\r\n        \r\n        try {\r\n          const response = await this.$('/simulations/', this.simulation)\r\n          this.$toast.success('模拟创建成功')\r\n          this.$router.push(`/simulations/${response.data.id}`)\r\n        } catch (error) {\r\n          console.error('Failed to create simulation:', error)\r\n          this.$toast.error('创建模拟失败')\r\n        } finally {\r\n          this.loading = false\r\n        }\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .simulation-create {\r\n    padding-top: 16px;\r\n  }\r\n  </style>"],"mappings":";;;AA6FA;EACAA,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,KAAA;MACAC,OAAA;MACAC,UAAA;QACAJ,IAAA;QACAK,WAAA;QACAC,gBAAA;QACAC,WAAA;QACAC,WAAA;QACAC,cAAA;QACAC,SAAA;MACA;MACAC,gBAAA,GACA;QAAAC,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA;IAEA;EACA;EACAC,OAAA;IACAC,SAAA,WAAAA,UAAA;MACA,KAAAC,KAAA,CAAAC,IAAA,CAAAC,KAAA;MACA,KAAAd,UAAA;QACAJ,IAAA;QACAK,WAAA;QACAC,gBAAA;QACAC,WAAA;QACAC,WAAA;QACAC,cAAA;QACAC,SAAA;MACA;IACA;IACAS,gBAAA,WAAAA,iBAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,QAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAA,IACAV,KAAA,CAAAJ,KAAA,CAAAC,IAAA,CAAAc,QAAA;gBAAAH,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,OAAAF,QAAA,CAAAI,MAAA;YAAA;cAEAZ,KAAA,CAAAjB,OAAA;cAAAyB,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAGAV,KAAA,CAAAa,CAAA,kBAAAb,KAAA,CAAAhB,UAAA;YAAA;cAAAqB,QAAA,GAAAG,QAAA,CAAAM,IAAA;cACAd,KAAA,CAAAe,MAAA,CAAAC,OAAA;cACAhB,KAAA,CAAAiB,OAAA,CAAAC,IAAA,iBAAAC,MAAA,CAAAd,QAAA,CAAAxB,IAAA,CAAAuC,EAAA;cAAAZ,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAa,EAAA,GAAAb,QAAA;cAEAc,OAAA,CAAAC,KAAA,iCAAAf,QAAA,CAAAa,EAAA;cACArB,KAAA,CAAAe,MAAA,CAAAQ,KAAA;YAAA;cAAAf,QAAA,CAAAC,IAAA;cAEAT,KAAA,CAAAjB,OAAA;cAAA,OAAAyB,QAAA,CAAAgB,MAAA;YAAA;YAAA;cAAA,OAAAhB,QAAA,CAAAiB,IAAA;UAAA;QAAA,GAAArB,OAAA;MAAA;IAEA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}